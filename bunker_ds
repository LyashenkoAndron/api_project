# -*- coding: utf-8 -*-

import discord
from random import choice, randint


class Person:
    def __init__(self):
        self.JOBS = ["Инженер", "Программист", "Менеджер Макдональдса", "Электрик", "Военный", "Бывший военный", "Грузчик",
                     "Фермер", "Полицейский", "Пожарный", "Строитель", "Химик", "Слесарь", "Столяр", "Космонавт", "Автомеханик",
                     "Охотник", "Лесничий", "Охранник Пятёрочки", "Трейдер", "Акушер-гинеколог", "Лор", "Хирург", "Священник",
                     "Кассир", "Лингвист", "Проститутка", "Швея", "Шахтёр", "Сутенёр", "Вебкам модель", "Браконьер",
                     "Картёжный шулер", "Безработный", "Флорист", "Сомелье", "Художник", "Таксист", "Доярка", "Сантехник",
                     "Поет", "Писатель", "Рэпер", "Музыкант", "Певец", "Порноактёр", "Актёр", "Режиссёр", "Гробовщик", "Трудовик",
                     "Учитель географии", "Стример", "Ютубер", "Киберспортсмен", "Пилот", "Спортсмен", "Косплеер бананов",
                     "Работник сексшопа", "Татуировщик", "Цыган - гадалка"]

        self.FEARS = ["Боязнь плавать", "Боязнь бананов", "Боязнь мусора", "Клаустрофобия", "Боязнь темноты", "Боязнь чёрных кошек",
                      "Боязнь зелёного цвета", "Боязнь самолётов", "Боязнь высоты", "Боязнь врачей", "Боязнь пауков",
                      "Боязнь проституток", "Страх холода", "Боязнь яиц", "Боязнь птиц", "Боязнь рыб", "Страх насекомых",
                      "Страх мыться", "Страх детей", "Страх приборов", "Боязнь анимешников", "Боязнь сидевших", "Боязнь вакцин",
                      "Боязнь крови", "Боязнь беременных женщин", "Бесстрашный"]

        self.HOBBIES = ["Охота", "Аниме", "Дайвинг", "Футбол", "Стрельба из лука", "Йога", "Пилатес", "Гольф", "Подрабатывает в цирке",
                        "Массаж", "Пикапер", "Программирование", "Пчеловодство", "Рыбалка", "Фокусник", "Сатанист", "Сектант",
                        "Культист", "Хиромантия (Гадание по руке)", "Разведение рыбок", "Коллекционер фаллосов", "Мыловарение",
                        "Кулинария", "Выращивание растений", "Сбор грибов", "Курсы программирования", "Курсы юного химика",
                        "Курсы юного инженера", "Курсы ботаники", "Разводит куриц", "Курсы юнного выживальщика", "Биолог"]

        self.LUGGAGES = ["Ящик бананов", "Ящик зелёных бананов", "Зелёное пальто", "Конь", "Банка солёных огурцов",
                         "Инкубатор и 50 куриных яиц", "Аптечка", "Дифибрилятор", "Три зимних костюма", "Манга", "Телевизор с приставкой",
                         "Флешка с 512 гб порно", "Смазка", "Вилка", "Попугай", "Окровавленная голова барана", "Компас",
                         "Лопата", "Карта местности", "Ружьё", "Компьютер", "Учебник биологии", "Повареная книга",
                         "Пачка пельменей", "Террариум со змеями", "Таррариум с  пауками", "Семена пшеницы", "Бутылка водки",
                         "Фаллос", "Пистолет", "Комплект столовых приборов", "Мачете", "Колода карт", "Набор юного хирурга",
                         "Набор юного химика", "Набор инструментов (Пила, топор, молоток, кирка)", "Гитара", "Флешка с аниме",
                         "Икона, святая вода и библия", "Ящик консервов", "Рация", "Набор первой помощи", "Два слитка золота",
                         "Зелёный зонт", "Зелёный надувной плот", "Ингалятор", "Крыса"]

        self.CHARACTERS = ["Добрый", "Злой", "Любит детей", "Вежливый", "Агрессивный", "Грубый", "Шутник", "Осторожный",
                           "Легкомысленный", "Щедрый", "Жадный", "Мужественный", "Честный", "Пиздабол", "Любит животных",
                           "Эгоист", "Ленивый", "Любит работать", "Реалист", "Оптимист", "Пессимист"]

        self.HEALTHS = ["Идеально здоров (Не учитывать процент)", "Член 3 сантиметра (Не учитывать процент)", "Диабет",
                        "Алкоголик", "Боязнь света", "Член 37 сантиметров (Не учитывать процент)", "Грудь 6 размера (Не учитывать процент)",
                        "Рак яичек", "Шизофрения", "Биполярное расстройство", "Качок", "Всю жизнь занимется спортом (Не учитывать процент)",
                        "Гетерохромия (Глаза разного цвета)", "Косоглазие", "Слепота", "Насморк", "Выпадают волосы",
                        "Карлик (Не учитывать процент)", "Гигант (Не учитывать процент)", "Курильщик", "Дальтонизм",
                        "Рассеянный склероз (Раздражительность)", "Абсолютно здоров (Не учитывать процент)", "Идеально здоров (Не учитывать процент)",
                        "Прыщ на жопе (Не учитывать процент)", "Грибок стопы", "Наркоман", "Веснушки", "Анорексия", "Астма", "Глухой (Не учитывать процент)"]
        
        self.INFOS = ["Сидел за педофилию", "Сидел за изнасилование", "Выиграл турнир по покеру", "Подтягивается 30 раз", "Знает все стихи Пушкина наизусть", "Знает как варить самогон", "Читал 'Метро' Глуховского", "Верит в заговоры", "Закончил школу с красным дипломом", "МС по боксу", "Принимал роды", "Обожает курицу", "подрабатывал фельдшером", "Закончил кадетское училище", "Выпивал с депутатами", "Мечтает стать космонавтом", "Владеет языком жестов", "Капрофил", "Есть химическое образование", "Не умеет читать", "Остался жив после встречи с медведем", "Выиграл турнир по шахматам"]
        self.CARDS = ["Удаляет все профессии", "Заменяет все профессии", "Заменяет хобби этому игроку", "Заменяет состояние здоровья этого игрока", "Заменяет характер этого игрока", "Добавляет этому игроку второй багаж", "Заменяет багаж этого игрока", "Добавляет этому игроку второе хобби", "Заменяет здоровье выбранного игрока на идеальное", "Знает, что рядом есть бункер с ботаником и химиком", "Знает где находится ящик с оружием", "Меняется хобби с выбранным игроком", "Рядоми есть водоочистительная станция", "Рядом есть работающая электростанция", "Меняется здоровьем с выбранным игроком", "Меняется профессией с выбранным игроком", "Возвращает выбранного игрока в игру", "Убивает выбранного игрока", "Увеличивает место в бункере на 1", "Уменьшает место в бункере на 1", "Заменяет фобию выбранного игрока на боязнь зелёного цвета", "Меняется фобией с выбранным игроком", "Заменяет фобию выбранного игрока на боязнь бананов", "Заменяет багаж выбранного игрока на зелёное пальто", "Ворует багаж выбранного игрока", "Меняется багажом с выбранным игроком", "Знает где находится тайник с тушёнкой", "Раскрывает багаж выбранного игрока", "Раскрывает здоровье выбранного игрока", "Карта друга: вы попадаете в бункер только с человеком над вами", "Карта врага: вы не попадёте в бункер с человеком под вами", "Меняет пол выбранного игрока на противоположный", "Заставляет выбранного игрока использовать любую карту действия"]
        self.age = (randint(18, 100))
        self.sex = choice(["Мужчина", "Женщина"])
        if randint(0, 150) > 135:
            self.sex += ", чайлдфри"
        self.job = choice(self.JOBS)
        self.health = (choice(self.HEALTHS), randint(0, 100))
        self.fear = choice(self.FEARS)
        self.hobby = choice(self.HOBBIES)
        self.luggage = choice(self.LUGGAGES)
        self.character = choice(self.CHARACTERS)
        self.info = choice(self.INFOS)
        self.card1 = choice(self.CARDS)
        self.card2 = choice(self.CARDS)


class Shelter:
    def __init__(self):

        self.EQUIPMENT = ["Библиотека", "Генератор", "Мастерская", "Ящики с продовольствием", "Склад с оружием", "Крысы", "Тараканы", "Порно журналы", "Столовая", "Клетка для животных", "Теплица", "Холодильник", "Кухня", "Хим. лаборатия", "Склад тёплой одежды", "Мед. кабинет", "Тренажёрный зал", "Колода карт", "Студия звукозаписи", "Комплект настольных игр"]

        self.size = str(randint(50, 470)) + " кв. м"
        self.time_to_stay = str(randint(3, 60)) + " мес."
        self.equipment = choice(self.EQUIPMENT)


class Apocalypse:
    def __init__(self):
        self.STORIES = ["Зомби - апокалипсис", "Глобальное потепление", "Леднековый период", "Потоп", "Появился новый смертельынй вирус", "Извержение супер-вулкана", "Падение метеорита", "Ядерня война", "Нападение инопланетян", "Восстание машин", "Схождение Земли с орбиты", "Взрыв Солнца", "Природа восстаёт против человека", "Возвращение внука Гитлера", "Чума", "Симианский грипп", "Билл Гейтс чипирует всё человечество и превращает в своих марионеток"]
        
        self.survived = str(randint(1, 33)) + "%"
        self.story = choice(self.STORIES)


class MyBot(discord.Client):
    async def on_ready(self):
        print("ВСЁ ЗАШИБИСЬ! РАБОТАЕМ\n")

    async def on_message(self, message):
        if str(message.channel) == "bunkerbot" and message.content.lower() == "дай персонажа":
            self.person = Person()
            await message.author.send("👫Пол, возраст: " + self.person.sex + " " + str(self.person.age) + "\n💰Профессия: " +
                                      self.person.job + "\n💊Состояние здоровья: " +
                                      self.person.health[0] + " (" + str(self.person.health[1]) + "%)\n😱Фобия: " +
                                      self.person.fear + "\n🎸Хобби: " +
                                      self.person.hobby + "\n💼Багаж: " +
                                      self.person.luggage + "\n🤡Характер: " +
                                      self.person.character + "\n🔍Доп. информация: " +
                                      self.person.info)
            await message.author.send("🃏Карта №1: " + self.person.card1 + "\n🎴Карта №2: " + self.person.card2)
        elif str(message.channel) == "bunkerbot" and message.content.lower().split()[0] == "смена":
            self.person = Person()
            if message.content.lower().split()[1] == "здоровья":
                await message.author.send("💊Состояние здоровья: " + self.person.health[0] + " (" + str(self.person.health[1]) + "%)")

            elif message.content.lower().split()[1] == "профессии":
                await message.author.send("💰Профессия: " + self.person.job)

            elif message.content.lower().split()[1] == "хобби":
                await message.author.send("🎸Хобби: " + self.person.hobby)
                
            elif message.content.lower().split()[1] == "багажа":
                await message.author.send("💼Багаж: " + self.person.luggage)

        elif str(message.channel) == "bunkerbot" and message.content.lower() == "удалить":
            async for mess in message.channel.history(limit=50):
                if not(mess.pinned):
                    await mess.delete()
                
        elif str(message.channel) == "bunkerbot" and message.content.lower() == "удалить лс":
            async for mess in message.author.history(limit=50):
                if mess.author != message.author:
                    await mess.delete()
                    
        elif str(message.channel) == "bunkerbot" and message.content.lower() == "история":
            self.cat = Apocalypse()
            self.shelter = Shelter()
            await message.channel.send("🌋Катастрофа: " + self.cat.story +
                                       "\n😎Выживших " + self.cat.survived)
            await message.channel.send("📏Размер бункера: " + self.shelter.size +
                                       "\n⏱Длительность пребывания: " + self.shelter.time_to_stay +
                                       "\n⚰️В бункере есть: " + self.shelter.equipment)
client = MyBot()
client.run("*токен*")
